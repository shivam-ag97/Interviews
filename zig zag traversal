int max(int a,int b)
{
    if(a>=b)
    return a;
    return b;
}

int height(Node* root)
{
    if(!root)
    return -1;
    
    return max(height(root->left)+1,height(root->right)+1);
}
bool flag=false;
stack<int> s;
void zig(Node* root,int level)
{   if(!root)
    return;
    else if(level==0 && flag==false)
    {
        cout<<root->data<<" ";
    }
    else if(level==0 && flag==true)
    {
        s.push(root->data);
    }
    else if(level>0)
    {
        zig(root->left,level-1);
        zig(root->right,level-1);
    }
}
void zigZagTraversal(Node* root)
{
    int h=height(root);
    
    for(int i=0;i<=h;i++)
    {   flag=(i%2!=0)?true:false;
        zig(root,i);
        if(flag==true)
        while(!s.empty())
        {
            cout<<s.top()<<" ";
            s.pop();
        }
    }
    cout<<"\n";
}
